/*===== GOOGLE FONTS =====*/
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap");

/*===== VARIABLES CSS =====*/
:root{
  --nav-width: 92px;

  /*===== Colores =====*/
  --first-color: #0C5DF4;
  --bg-color: #12192C;
  --sub-color: #B6CEFC;
  --white-color: #FFF;
  
  /*===== Fuente y tipografia =====*/
  --body-font: 'Poppins', sans-serif;
  --normal-font-size: 1rem;
  --small-font-size: .875rem;
  
  /*===== z index =====*/
  --z-fixed: 100;
}


/*===== BASE =====*/
*,::before,::after{
  box-sizing: border-box;
}
body{
  background: #f2f4f8;
  position: relative;
  margin: 0;
  font-family: var(--body-font);
  font-size: var(--normal-font-size);
  transition: .5s;
}
h1{
  margin: 0;
}
ul{
  margin: 0;
  padding: 0;
  list-style: none;
}
a{
  text-decoration: none;
}

/*===== l NAV =====*/
.l-navbar{
  position: fixed;
  top: 0;
  left: 0;
  width: var(--nav-width);
  height: 100vh;
  background-color: var(--bg-color);
  color: var(--white-color);
  padding: 1.5rem 1.5rem 2rem;
  transition: .5s;
  z-index: var(--z-fixed);
}
::-webkit-scrollbar {
  display: none;
}
/*===== NAV =====*/
.nav{
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  overflow-y: scroll;
} 
.nav__brand{
  display: grid;
  grid-template-columns: max-content max-content;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}
.nav__toggle{
  font-size: 1.25rem;
  padding: .75rem;
  cursor: pointer;
}
.nav__logo{
  color: var(--white-color);
  font-weight: 600;
}

.nav__link{
  display: grid;
  grid-template-columns: max-content max-content;
  align-items: center;
  column-gap: .75rem;
  padding: .75rem;
  color: var(--white-color);
  border-radius: .5rem;
  margin-bottom: 1rem;
  transition: .3s;
  cursor: pointer;
}
.nav__link:hover{
  background-color: var(--first-color);
}
.nav__icon{
  font-size: 1.25rem;
}
.nav__name{
  font-size: var(--small-font-size);
}

/*Expander menu*/
.expander{
  width: calc(var(--nav-width) + 9.25rem);
}

/*Add padding body*/


/*Active links menu*/
.active{
  background-color: var(--first-color);
}

/*===== COLLAPSE =====*/
.collapse{
  grid-template-columns: 20px max-content 1fr;
}
.collapse__link{
  justify-self: flex-end;
  transition: .5s;
}
.collapse__menu{
  display: none;
  padding: .75rem 2.25rem;
}
.collapse__sublink{
  color: var(--sub-color);
  font-size: var(--small-font-size);
}
.collapse__sublink:hover{
  color: var(--white-color);
}

/*Show collapse*/
.showCollapse{
  display: block;
}

/*Rotate icon*/
.rotate{
  transform: rotate(180deg);
}





.card {
  display: grid;
  grid-template-areas: "image" "text" "stats";
  border-radius: 18px;
  background: white;
  box-shadow: 5px 5px 15px rgba(0,0,0,0.9);

  text-align: center;
}
.card-image {
  grid-area: image;
}
.card-text {
  grid-area: text;
}
.card-stats {
  grid-area: stats; 
}

.card-text {
  grid-area: text;
  margin: 25px;
}
.card-text .date {
  color: rgb(255, 7, 110);
  font-size:13px;
}
.card-text p {
  color: grey;
  font-size:15px;
  font-weight: 300;
}
.card-text h2 {
  margin-top:0px;
  font-size:28px;
}
.card-stats {
  grid-area: stats; 
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr;

  border-bottom-left-radius: 15px;
  border-bottom-right-radius: 15px;
  background: #57068c;
}
.card-stats .stat {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;

  color: white;
  padding:10px;
}
.card:hover {
  transform: scale(1.02);
  box-shadow: 5px 5px 15px rgba(0,0,0,0.6);
}
.card {
  transition: 0.5s ease;
  cursor: pointer;
  margin:30px;
}


.card1 {
  display: grid;
  grid-template-areas: "image" "text" "stats";
  border-radius: 18px;
  background: white;
  box-shadow: 5px 5px 15px rgba(0,0,0,0.9);

  text-align: center;
}
.card1-image {
  grid-area: image;
}
.card1-text {
  grid-area: text;
}
.card1-stats {
  grid-area: stats; 
}

.card1-text {
  grid-area: text;
  margin: 25px;
}
.card1-text .date {
  color: rgb(255, 7, 110);
  font-size:13px;
}
.card1-text p {
  color: grey;
  font-size:15px;
  font-weight: 300;
}
.card1-text h2 {
  margin-top:0px;
  font-size:28px;
}
.card1-stats {
  grid-area: stats; 
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr;

  border-bottom-left-radius: 15px;
  border-bottom-right-radius: 15px;
  background: rgb(255, 7, 110);
}
.card1-stats .stat {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;

  color: white;
  padding:10px;
}
.card1:hover {
  transform: scale(1.02);
  box-shadow: 5px 5px 15px rgba(0,0,0,0.6);
}
.card1 {
  transition: 0.5s ease;
  cursor: pointer;
  margin:30px;
}











@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap');

.blog-post{
    display: flex;
    flex-direction:row;
    margin: 10rem;
    justify-content: center;
    align-items:center;
    background-color: white;
}
.blog-post-img{
    flex:1;
    padding:2rem 2rem 2rem 0rem;
}
.blog-post-img>img{
    width: 100%;
    height: 100%;
    border-radius: 0.3rem;
    object-fit: cover;
    transform: translateX(-50px);
    box-shadow:0px 0px 3px 3px rgba(0, 0 , 0, .5);
}
.blog-post-info{
    flex:2;
    padding: 2rem;
}
.blog-post-title h2{
    color:#673AB7;
    text-transform: uppercase;
}
.blog-post-read-more a{
    cursor: pointer;
    text-decoration: none;
    font-style: normal;
    border-radius: 0.3rem;
    padding:0.5rem;
    background-color: #fff;
    border:1px solid #673AB7;
    color: #673AB7 !important;
    box-shadow: 0 0.05em 0.1em rgba(0,0,0,.25);
}
.blog-post-read-more a:hover{
    transition: .5s;
    background-color: #673AB7;
    border: 1px solid #673AB7;
    color: #fff !important;
    text-decoration: none;
}
/*Extra small devices (phones , 600px and down)*/
@media only screen and (max-width: 600px){
    .blog-post{
    display: flex;
    flex-direction:column;
    margin-top: 3rem;
    margin-left:1rem;
    margin-right: 1rem;
    justify-content: center;
    align-items:center;
    background-color: white;
}
.blog-post-img{
    flex:1;
    padding:0rem 1rem 0rem 1rem;
}
.blog-post-img>img{
    width: 100%;
    height: 100%;
    border-radius: 0.3rem;
    object-fit: cover;
    transform: translateY(-20px);
    box-shadow:0px 0px 3px 3px rgba(0, 0 , 0, .5);
}
.blog-post-info{
    flex:2;
    padding:0rem 1rem 2rem 1rem;
}
}
/*Medium devices (tablets landscape)*/
@media only screen and (min-width: 768px){
.blog-post{
    display: flex;
    flex-direction:column;
    margin-top: 3rem;
    margin-left:1rem;
    margin-right: 1rem;
    justify-content: center;
    align-items:center;
    background-color: white;
}
    .blog-post-img{
    flex:1;
    padding:0rem 1rem 0rem 1rem;
}
   .blog-post-img>img{
    width: 100%;
    height: 100%;
    border-radius: 0.3rem;
    object-fit: cover;
    transform: translateY(-20px);
    box-shadow:0px 0px 3px 3px rgba(0, 0 , 0, .5);
}
.blog-post-info{
    flex:2;
    padding:0rem 1rem 2rem 1rem;
}
}
/*Large devices (laptops)*/
@media only screen and (min-width: 992px){
    .blog-post{
    display: flex;
    flex-direction:row;
    margin: 10rem;
    justify-content: center;
    align-items:center;
    background-color: white;
    }
    .blog-post-img{
    flex:1;
    padding:2rem 2rem 2rem 0rem;
}
.blog-post-img>img{
    width: 100%;
    height: 100%;
    border-radius: 0.3rem;
    object-fit: cover;
    transform: translateX(-50px);
    box-shadow:0px 0px 3px 3px rgba(0, 0 , 0, .5);
}
.blog-post-info{
    flex:2;
    padding: 2rem;
}
}





*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body{
    background: #000;
    min-height: 100vh;
  }


.container{
  position: relative;
  overflow: hidden;
  height: 100vh;
  animation: animate 4s linear infinite;
}
@keyframes animate {
  0%{
    filter: hue-rotate(0deg);
  }
  100%{
    filter: hue-rotate(360deg);
  }
}

.row{
  display: inline-flex;
  margin-left: -50px;
  margin-top: -32px;
  overflow: hidden;
}
.row:nth-child(even){
  margin-left: 1px;
}
.hexagon{
  background: #111;
  position: relative;
  height: 110px;
  width: 100px;
  margin: 1px;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  transition: 2s;
}
.hexagon::before{
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  pointer-events: none;
  background: rgba(255, 255, 255, 0.02);
}
.hexagon:hover{
  transition: 0s;
  background: #0f0;
  cursor: alias;
}



.soon{
  text-align: center;
}





:root {
  --sqrt3: 1.73205080757;                      /* Square root of 3 */
  --time: 11;                                  /* Duration of animation  */
  --gap: 1;                                    /* Horizontal gap between hexagons */
  --radius: 3;                                 /* Radius of inscribed circle */
  --Gap: var(--gap) / 2 * var(--sqrt3);        /* Vertical gap between hexagons */
  --Radius: 2 / var(--sqrt3) * var(--radius);  /* Radius of circumcircle */
}

@keyframes odd-animation {
  0%   { transform: translate(calc( 0.5 * var(--offset-x) ), calc( 0.5 * var(--offset-y) )) scale(0) }
  33%  { transform: translate(calc(   1 * var(--offset-x) ), calc(   1 * var(--offset-y) )) scale(1) }
  66%  { transform: translate(calc(   2 * var(--offset-x) ), calc(   2 * var(--offset-y) )) scale(1) }
  100% { transform: translate(calc(   3 * var(--offset-x) ), calc(   3 * var(--offset-y) )) scale(0) }
}

@keyframes even-animation {
  50%  { transform: translate(calc( 1 * var(--offset-x) ), calc( 1 * var(--offset-y) )) scale(1) }
  100% { transform: translate(calc( 2 * var(--offset-x) ), calc( 2 * var(--offset-y) )) scale(0) }
}

body {
  align-items: center;
  background-color: black;
  display: flex;
  height: 100vh;
  justify-content: center;
  overflow: hidden;
  margin: 0;
}

.hex {
  color: white;
  display: flex;
  font-size: 3vmin;
  height: calc(2em * var(--Radius));
  width: calc(2em * var(--radius));
}

.hex::before {
  border: calc(0.5em * var(--Radius)) solid transparent;
  border-left: 0;
  border-right: calc(1em * var(--radius)) solid currentColor;
  content: "";
  height: var(--Radius);
}

.hex::after  {
  border: calc(0.5em * var(--Radius)) solid transparent;
  border-left: calc(1em * var(--radius)) solid currentColor;
  border-right: 0;
  content: "";
  height: var(--Radius);
}

.center {
  position: relative;
}

.odd,
.even {
  --global-offset-x: calc( 0.5em * var(--gap) + var(--radius) * 1em);
  --global-offset-y: calc( 1.5em * var(--Radius) + var(--Gap) * 1em);
  animation: infinite cubic-bezier(.21, .61, .01, .89);
  position: absolute;
  transform: translate(0, 0) scale(0);  
}

.odd {
  animation-duration: 11s;
}
.even {
  animation-duration: 7.333333333s;
}

.hex.first {
  animation-delay: -6.2857142857s;
}
.hex.second {
  animation-delay: -2.619047619s;
}
.hex.third {
  animation-delay: 1.0476190476s;
}

@supports (animation-delay: calc(1 * 1s)) and (animation-duration: calc(1 * 1s)) {
  .odd {
    animation-duration: calc(var(--time) * 1s);
  }
  .even {
    animation-duration: calc( var(--time) * 2 / 3 * 1s);
  }
  
  .hex.first {
    animation-delay: calc( var(--time) / -1.75 * 1s );
  }
  .hex.second {
    animation-delay: calc( var(--time) * 1.25 / -5.25 * 1s );
  }
  .hex.third {
    animation-delay: calc( var(--time) * -0.25 / -2.625 * 1s );
  }
}

.hex.one {
  --offset-x: calc( var(--global-offset-x) * 1 );
  --offset-y: calc( var(--global-offset-y) * -1 );
  animation-name: odd-animation;
  bottom: 0;
  left: 0;
}
.hex.two {
  --offset-x: calc( var(--global-offset-x) * 1.5 );
  --offset-y: calc( var(--global-offset-y) * -0.5 );
  animation-name: even-animation;
  bottom: calc( var(--global-offset-y) * 0.5 );
  left: calc( var(--global-offset-x) * 1.5 );
}
.hex.three {
  --offset-x: calc( var(--global-offset-x) * 2 );
  --offset-y: calc( var(--global-offset-y) * 0 );
  animation-name: odd-animation;
  bottom: 0;
  right: 0;
}
.hex.four {
  --offset-x: calc( var(--global-offset-x) * 1.5 );
  --offset-y: calc( var(--global-offset-y) * 0.5 );
  animation-name: even-animation;
  top: calc( var(--global-offset-y) * 0.5 );
  left: calc( var(--global-offset-x) * 1.5 );
}
.hex.five {
  --offset-x: calc( var(--global-offset-x) * 1 );
  --offset-y: calc( var(--global-offset-y) * 1 );
  animation-name: odd-animation;
  top: 0;
  left: 0;
}
.hex.six {
  --offset-x: calc( var(--global-offset-x) * 0 );
  --offset-y: calc( var(--global-offset-y) * 1 );
  animation-name: even-animation;
  top: calc( var(--global-offset-y) * 1 );
  left: 0;
}
.hex.seven {
  --offset-x: calc( var(--global-offset-x) * -1 );
  --offset-y: calc( var(--global-offset-y) * 1 );
  animation-name: odd-animation;
  top: 0;
  right: 0;
}
.hex.eight {
  --offset-x: calc( var(--global-offset-x) * -1.5 );
  --offset-y: calc( var(--global-offset-y) * 0.5 );
  animation-name: even-animation;
  top: calc( var(--global-offset-y) * 0.5 );
  right: calc( var(--global-offset-x) * 1.5 );
}
.hex.nine {
  --offset-x: calc( var(--global-offset-x) * -2 );
  --offset-y: calc( var(--global-offset-y) * 0 );
  animation-name: odd-animation;
  top: 0;
  right: 0;
}
.hex.ten {
  --offset-x: calc( var(--global-offset-x) * -1.5 );
  --offset-y: calc( var(--global-offset-y) * -0.5 );
  animation-name: even-animation;
  bottom: calc( var(--global-offset-y) * 0.5 );
  right: calc( var(--global-offset-x) * 1.5 );
}
.hex.eleven {
  --offset-x: calc( var(--global-offset-x) * -1 );
  --offset-y: calc( var(--global-offset-y) * -1 );
  animation-name: odd-animation;
  bottom: 0;
  right: 0;
}
.hex.twelve {
  --offset-x: calc( var(--global-offset-x) * 0 );
  --offset-y: calc( var(--global-offset-y) * -1 );
  animation-name: even-animation;
  bottom: calc( var(--global-offset-y) * 1 );
  left: 0;
}

